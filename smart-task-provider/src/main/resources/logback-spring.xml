<?xml version="1.0" encoding="UTF-8"?>
<!--scan属性为true时表示配置文件如果发生变更，将会被重新加载；scanPeriod默认单位是毫秒-->
<configuration debug="false" scan="true" scanPeriod="3 seconds">

    <contextName>logback</contextName>

    <!-- 输出到指定日志文件定义   -->
    <property name="ftp.log.path" value="logs/ftp.log"/>

    <!--输出到控制台-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{yyyy-MM-dd HH-mm-ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>debug</level>
        </filter>
    </appender>

    <!--输出日志到文档-->
    <appender name="ftp-file-appender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${ftp.log.path}</file>
        <!--日志记录器的滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${ftp.log.path}.%d{yyyy-MM-dd}.%i.zip</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>500MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文档保存天数-->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH-mm-ss.SSS} %level [%thread] %logger{36} [%file : %line] %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>debug</level>
        </filter>
    </appender>



    <!--root节点用于指定全局日志级别-->
    <root level="debug">
        <appender-ref ref="console"/>
    </root>

    <!--指定具体包目录下的日志级别，可用于日志输出过滤，此处配置的优先级高于root配置的日志输出级别-->
    <logger level = 'warn' name = 'org.springframework'/>
    <logger level = 'info' name = 'com.baomidou.mybatisplus'/>
    <logger level = 'error' name = 'com.alibaba'/>
    <!-- FtpUtils专门配置日志输出logger 输出到指定文件 additivity指定继承父logger也输出到控制台 -->
    <logger name="com.code.maker.utils.FtpUtils" level="DEBUG" additivity="true">
        <appender-ref ref="ftp-file-appender"/>
    </logger>
</configuration>
